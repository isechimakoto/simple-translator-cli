name: Build CLI

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ./target
          key: test-cargo-registry
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose
  build:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
          - target: arm-unknown-linux-gnueabihf
            os: ubuntu-latest
          - target: arm-unknown-linux-musleabihf
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          # - target: x86_64-pc-windows-gnu
          #   os: windows-latest
    needs: test
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.target }}
    defaults:
      run:
        shell: bash
    env:
      NAME: translator-cli
      TARGET: ${{ matrix.target }}
      OS: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ./target
          key: build-cargo-registry-${{ matrix.target }}
      - name: Install and configure dependencies
        run: |
          if [[ $OS =~ ^ubuntu.*$ ]]; then
            sudo apt install pkg-config libssl-dev librust-openssl-dev
          fi
          if [[ $OS =~ ^windows.*$ ]]; then
            mkdir \Tools
            cd \Tools
            git clone https://github.com/Microsoft/vcpkg.git
            ls vcpkg
            vcpkg/bootstrap-vcpkg.bat
            vcpkg/vcpkg install openssl:x64-windows-static
          fi
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --verbose --target ${{ matrix.target }}
      - name: List target
        run: find ./target
      - name: Compress
        run: |
          mkdir -p ./artifacts
          if [[ $OS =~ ^windows.*$ ]]; then
              EXEC=$NAME.exe
          else
              EXEC=$NAME
          fi
          if [[ $GITHUB_REF_TYPE =~ ^tag$ ]]; then
            TAG=$GITHUB_REF_NAME
          else
            TAG=$GITHUB_SHA
          fi
          mv ./target/$TARGET/release/$EXEC ./$EXEC
          tar -czf ./artifacts/$NAME-$TARGET-$TAG.tar.gz $EXEC
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: result
          path: |
            ./artifacts
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: result
          path: ./artifacts
      - name: List
        run: find ./artifacts
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifacts/*.tar.gz